version: '3.8'

services:
  # Main application service
  letsdraw:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: letsdraw-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - TIMER=${TIMER:-300}
      - CANVAS_WIDTH=${CANVAS_WIDTH:-3800}
      - CANVAS_HEIGHT=${CANVAS_HEIGHT:-2000}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - HELMET_ENABLED=${HELMET_ENABLED:-true}
    depends_on: []
    networks:
      - letsdraw-network
    volumes:
      - app-logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: letsdraw-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - letsdraw
    networks:
      - letsdraw-network
    profiles:
      - production
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  letsdraw-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  app-logs:
    driver: local